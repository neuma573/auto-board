name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
 build-and-test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-20.04
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5
    - name: Build with Gradle Wrapper
      run: ./gradlew build
 deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
    - name: Build with Gradle Wrapper
      run: ./gradlew clean build
    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Copy JAR file to server
      run: | 
        scp -o "StrictHostKeyChecking=no" -P ${{ secrets.SERVER_PORT }} ./build/libs/auto-board-0.0.1-SNAPSHOT.jar ${{ secrets.SSH_USER }}@${{ secrets.SERVER_URL }}:${{ secrets.DEPLOY_PATH }}/auto-board-0.0.1-SNAPSHOT.jar
    - name: Execute Deployment Script
      run: |
        ssh -o "StrictHostKeyChecking=no" -p ${{ secrets.SERVER_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SERVER_URL }} << EOF
        sudo systemctl stop ${{ secrets.SERVICE_NAME }}
        sudo systemctl daemon-reload
        sudo systemctl start ${{ secrets.SERVICE_NAME }}
        EOF
